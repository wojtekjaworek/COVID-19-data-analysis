setwd("C:/Users/jawor/PycharmProjects/Covid-19 Data Vizualization/R analysis")
# source data from web
all_data <- read.csv("owid-covid-data.csv")
all_data$date <- as.Date(all_data$date)
all_data <- all_data[order(all_data$date, decreasing=TRUE),]
# using dplyr package!!
# get countries data, such as poverty, gpd, nr of hospital places, etc.
country_data<- all_data %>% distinct(all_data$location, .keep_all = TRUE)
library(dplyr)
library(tidyr)
# using dplyr package!!
# get countries data, such as poverty, gpd, nr of hospital places, etc.
country_data<- all_data %>% distinct(all_data$location, .keep_all = TRUE)
# extract Poland data
str(all_data) # read structure of data frame, get to know all the headers
poland_data <- all_data[all_data$location == "Poland", ]
# data of continents
Continents_data <- rbind(head(all_data[all_data$location == "Asia", ], n=1), head(all_data[all_data$location == "Europe", ], n=1))
Continents_data <- rbind(Continents_data, head(all_data[all_data$location == "North America", ], n=1))
Continents_data <- rbind(Continents_data, head(all_data[all_data$location == "South America", ], n=1))
Continents_data <- rbind(Continents_data, head(all_data[all_data$location == "Oceania", ], n=1))
Continents_data <- rbind(Continents_data, head(all_data[all_data$location == "Africa", ], n=1))
Coninents_mean_index <-  mean(all_data[all_data$continent == "Europe", ]$stringency_index,na.rm=TRUE)
Continents_stringency_index <-  c(mean(all_data[all_data$continent == "Europe", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$stringency_index,na.rm=TRUE))
Continents_data["stringency_index"] <- Continents_stringency_index
View(Continents_data)
Continents_stringency_index <-  c(mean(all_data[all_data$continent == "Asia", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Europe", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$stringency_index,na.rm=TRUE))
Continents_data["stringency_index"] <- Continents_stringency_index
View(Continents_data)
View(Continents_data)
Continents_stringency_index <-  c(mean(all_data[all_data$continent == "Asia", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Europe", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$stringency_index,na.rm=TRUE))
Continents_data["stringency_index"] <- Continents_stringency_index
Continents_data$stringency_index
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
legend("topright", Continents_data$stringency_index)
legend("topright", legend=Continents_data$stringency_index)
legend("topright", legend=Continents_data$location)
plot(poland_data$date,poland_data$total_cases , type="l", xaxt="n") # basic plot
pie(Continents_data$total_deaths_per_million, labels = Continents_data$stringency_index, main="Śmiertelność w przeliczeniu na milion mieszkańców")
legend("topright", legend=Continents_data$location)
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,2))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$stringency_index, names.arg = Continents_data$location)
View(Continents_data)
EU_data <- all_data[all_data$location == "Europe", ]
par(nfrow=c(1,2))
plot(poland_data$date,poland_data$total_cases , type="l", xaxt="n") # basic plot
plot(EU_data$date,EU_data$total_cases , type="l", xaxt="n") # basic plot
grid()
par(nfrow=c(1,2))
grid()
plot(poland_data$date,poland_data$total_cases , type="l", xaxt="n") # basic plot
plot(EU_data$date,EU_data$total_cases , type="l", xaxt="n") # basic plot
par(nfrow=c(1,2))
plot(poland_data$date,poland_data$total_cases , type="l", xaxt="n") # basic plot
grid()
plot(EU_data$date,EU_data$total_cases , type="l", xaxt="n") # basic plot
grid()
par(nfrow=c(1,2))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n") # basic plot
grid()
plot(EU_data$date,EU_data$total_cases_per_million , type="l", xaxt="n") # basic plot
grid()
par(mfrow=c(1,2))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$stringency_index, names.arg = Continents_data$location)
View(Continents_data)
Continents_index <-  c(mean(all_data[all_data$continent == "Asia", ]$gdp_per_capita,na.rm=TRUE),
mean(all_data[all_data$continent == "Europe", ]$gdp_per_capita,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$gdp_per_capita,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$gdp_per_capita,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$gdp_per_capita,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$gdp_per_capita,na.rm=TRUE))
Continents_data["gdp_per_capita"] <- Continents_index
par(mfrow=c(1,2))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$gdp_per_capita, names.arg = Continents_data$location)
poland_data <- all_data[all_data$location == "Poland", ]
germany_data <- all_data[all_data$location == "Germany", ]
EU_data <- all_data[all_data$location == "Europe", ]
ASIA_data <- all_data[all_data$location == "Asia", ]
china_data <- all_data[all_data$location == "China", ]
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million) # basic plot
grid()
plot(poland_data$date,poland_data$total_cases_per_million) # basic plot
lines(EU_data$date,EU_data$total_cases_per_million) # basic plot
grid()
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million) # basic plot
grid()
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red") # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
grid()
View(country_data)
usa_data  <- all_data[all_data$location == "United States", ]
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red") # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topright", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,1000000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topright", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,100000)) # basic plot
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,100000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topright", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,600000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topright", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,600000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU",
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"),lty=1:2, cex=0.8)
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"), cex=0.8)
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"),lty=1:2)
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"),lty=1)
par(mfrow=c(1,1))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,1))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
legend("topleft", legend=Continents_data$stringency_index,lty=1)
legend("topleft", legend=Continents_data$stringency_index,lty=2)
legend("topleft", legend=Continents_data$stringency_index,lty=3)
legend("topleft", legend=Continents_data$stringency_index,lty=0.1)
legend("topleft", legend=Continents_data$stringency_index,lty=1)
legend("topleft", legend=Continents_data$stringency_index,lty=1, col="rainbow")
par(mfrow=c(1,1))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
pie(Continents_data$total_tests_per_thousand, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
View(Continents_data)
par(mfrow=c(1,2))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,2))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
pie(Continents_data$total_cases_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
pie(Continents_data$total_cases_per_million, labels = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,2))
pie(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
pie(Continents_data$total_cases_per_million, labels = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
barchart(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barhart(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,2))
barplot(Continents_data$total_deaths_per_million, labels = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,2))
barplot(Continents_data$total_deaths_per_million, names.arg = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$total_cases_per_million, names.arg = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
ordered_data <- country_data[order(country_data$stringency_index, decreasing=TRUE),]
View(ordered_data)
ordered_data <- country_data[order(country_data$population_density, decreasing=TRUE),]
ordered_data <- country_data[order(country_data$population_density, decreasing=TRUE),]
View(ordered_data)
1:nrow(country_data)
plot(1:nrow(ordered_data), ordered_data$total_cases_per_million)
plot(ordered_data$population_density, ordered_data$total_cases_per_million)
View(ordered_data)
plot(ordered_data$population_density, ordered_data$total_cases_per_million, xlim = c(0,2000))
plot(ordered_data$population_density, ordered_data$total_cases_per_million, xlim = c(0,500))
plot(ordered_data$population_density, ordered_data$human_development_index)
plot(ordered_data$population_density, ordered_data$human_development_index, xlim = c(0,500))
plot(ordered_data$population_density, ordered_data$total_cases_per_million, xlim = c(0,500))
plot(ordered_data$population_density, ordered_data$total_cases_per_million)
# extract Poland data
str(all_data) # read structure of data frame, get to know all the headers
par(mfrow=c(1,2))
plot(ordered_data$population_density, ordered_data$total_cases_per_million)
plot(1:nrow(ordered_data), ordered_data$total_cases_per_million)
par(mfrow=c(1,1))
plot(1:nrow(ordered_data), ordered_data$total_cases_per_million)
ordered_data <- country_data[order(country_data$hospital_beds_per_thousand, decreasing=TRUE),]
par(mfrow=c(1,1))
plot(1:nrow(ordered_data), ordered_data$total_cases_per_million)
View(ordered_data)
ordered_data <- country_data[order(country_data$human_development_index, decreasing=TRUE),]
par(mfrow=c(1,1))
plot(1:nrow(ordered_data), ordered_data$total_cases_per_million)
plot(1:nrow(ordered_data), ordered_data$total_deaths_per_million)
plot(1:nrow(ordered_data), 1:nrow(ordered_data))
ordered_data$total_deaths_per_million
plot(1:nrow(ordered_data), ordered_data$total_deaths_per_million)
# plot corelation between two indices
par(mfrow=c(1,1))
plot(1:nrow(ordered_data), ordered_data$total_deaths_per_million)
grid()
# plot barplots showing
par(mfrow=c(1,2))
barplot(Continents_data$total_deaths_per_million, names.arg = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$total_cases_per_million, names.arg = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
# plot barplots showing
par(mfrow=c(2,1))
barplot(Continents_data$total_deaths_per_million, names.arg = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
barplot(Continents_data$total_cases_per_million, names.arg = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
grid()
grid()
grid()
# plot barplots showing
par(mfrow=c(2,1))
barplot(Continents_data$total_deaths_per_million, names.arg = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
grid()
barplot(Continents_data$total_cases_per_million, names.arg = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
grid()
# plot barplots showing
par(mfrow=c(2,1))
grid()
barplot(Continents_data$total_deaths_per_million, names.arg = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
grid()
barplot(Continents_data$total_cases_per_million, names.arg = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
par(mfrow=c(1,1))
grid()
# plot barplots showing
par(mfrow=c(2,1))
barplot(Continents_data$total_deaths_per_million, names.arg = Continents_data$location, main="Śmiertelność w przeliczeniu na milion mieszkańców")
grid()
barplot(Continents_data$total_cases_per_million, names.arg = Continents_data$location, main="Ilość Zakażeń w przeliczeniu na milion mieszkańców")
grid()
Continents_index <-  c(mean(all_data[all_data$continent == "Asia", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Europe", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$stringency_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$stringency_index,na.rm=TRUE))
Continents_data["stringency_index"] <- Continents_index
Continents_data$stringency_index
Continents_index <-  c(mean(all_data[all_data$continent == "Asia", ]$human_development_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Europe", ]$human_development_index,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$human_development_index,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$human_development_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$human_development_index,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$human_development_index,na.rm=TRUE))
Continents_data["human_development_index"] <- Continents_index
Continents_data$human_development_index
#get desired index from continents
Continents_index <-  c(sum(all_data[all_data$continent == "Asia", ]$total_tests_per_thousand,na.rm=TRUE),
sum(all_data[all_data$continent == "Europe", ]$total_tests_per_thousand,na.rm=TRUE),
sum(all_data[all_data$continent == "North America", ]$total_tests_per_thousand,na.rm=TRUE),
sum(all_data[all_data$continent == "South America", ]$total_tests_per_thousand,na.rm=TRUE),
sum(all_data[all_data$continent == "Oceania", ]$total_tests_per_thousand,na.rm=TRUE),
sum(all_data[all_data$continent == "Africa", ]$total_tests_per_thousand,na.rm=TRUE))
Continents_data["total_tests_per_thousand"] <- Continents_index
Continents_data$total_tests_per_thousand
#get desired index from continents
Continents_index <-  c(mean(all_data[all_data$continent == "Asia", ]$total_tests_per_thousand,na.rm=TRUE),
mean(all_data[all_data$continent == "Europe", ]$total_tests_per_thousand,na.rm=TRUE),
mean(all_data[all_data$continent == "North America", ]$total_tests_per_thousand,na.rm=TRUE),
mean(all_data[all_data$continent == "South America", ]$total_tests_per_thousand,na.rm=TRUE),
mean(all_data[all_data$continent == "Oceania", ]$total_tests_per_thousand,na.rm=TRUE),
mean(all_data[all_data$continent == "Africa", ]$total_tests_per_thousand,na.rm=TRUE))
Continents_data["total_tests_per_thousand"] <- Continents_index
Continents_data$total_tests_per_thousand
# plot barplots showing continent statistics
par(mfrow=c(2,1))
par(mfrow=c(1,1))
plot(poland_data$date,poland_data$total_cases_per_million , type="l", xaxt="n", col="red", ylim=c(0,500000)) # basic plot
lines(germany_data$date,germany_data$total_cases_per_million, col="green") # basic plot
lines(EU_data$date,EU_data$total_cases_per_million, col="blue") # basic plot
lines(ASIA_data$date,ASIA_data$total_cases_per_million, col="pink") # basic plot
lines(china_data$date,china_data$total_cases_per_million, col="turquoise") # basic plot
lines(usa_data$date,usa_data$total_cases_per_million, col="black") # basic plot
grid()
legend("topleft", legend=c("Poland", "Germany", "EU", "Asia", "China", "United States"),
col=c("red", "green", "blue", "pink", "turquoise", "black"),lty=1)
